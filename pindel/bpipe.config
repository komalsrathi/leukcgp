// CGP TEST CONFIGURATION FILE
// ===========================


// GET OUTDIR
// ----------
import java.util.Map;
public class EnvMap {
    public static void main (String[] args) {
        Map<String, String> env = System.getenv();
        for (String envName : env.keySet()) {
            System.out.format("%s=%s%n",
                              envName,
                              env.get(envName));
            }
        }
    }
OUTDIR=System.getenv("OUTDIR")

// COMMANDS SETTINGS
// -----------------
commands {
    input {
        executor="lsf"
        lsf_request_options="-R 'rusage[mem=8]' -We 500 -J pin1[1-2] -eo $OUTDIR/err/pindel_input.%I.err -oo $OUTDIR/blogs/pindel_input.%I.logs "
    }

    pindel {
        executor="lsf"
        lsf_request_options="-R 'rusage[mem=12]' -We 100 -J pin2[1-25] -eo $OUTDIR/err/pindel_pindel.%I.err -oo $OUTDIR/blogs/pindel_pindel.%I.logs "
    }

    pin2vcf {
        executor="lsf"
        lsf_request_options="-R 'rusage[mem=12]' -We 100 -J pin3[1-25] -eo $OUTDIR/err/pindel_vcf.%I.err -oo $OUTDIR/blogs/pindel_vcf.%I.logs "
    }

    merge {
        executor="lsf"
        lsf_request_options="-R 'rusage[mem=2]' -We 60 -J pin4[1] -eo $OUTDIR/err/pindel_merge.%I.err -oo $OUTDIR/blogs/pindel_merge.%I.logs "
    }

    flag {
        executor="lsf"
        lsf_request_options="-R 'rusage[mem=1]' -We 60 -J pin5[1] -eo $OUTDIR/err/pindel_flag.%I.err -oo $OUTDIR/blogs/pindel_flag.%I.logs "
    }

    annotvcf {
        executor="lsf"
        lsf_request_options="-R 'rusage[mem=1]' -We 60 -J pin6[1] -eo $OUTDIR/err/pindel_annotvcf.%I.err -oo $OUTDIR/blogs/pindel_annotvcf.%I.logs "
    }

}


